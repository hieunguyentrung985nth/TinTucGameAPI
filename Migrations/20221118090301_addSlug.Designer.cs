// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TinTucGameAPI.Models;

#nullable disable

namespace TinTucGameAPI.Migrations
{
    [DbContext(typeof(doan5Context))]
    [Migration("20221118090301_addSlug")]
    partial class addSlug
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PostCategory", b =>
                {
                    b.Property<string>("PostId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("post_id");

                    b.Property<string>("CategoryId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("category_id");

                    b.HasKey("PostId", "CategoryId");

                    b.HasIndex(new[] { "CategoryId" }, "IX_PostCategory_category_id");

                    b.ToTable("PostCategory", (string)null);
                });

            modelBuilder.Entity("PostImage", b =>
                {
                    b.Property<string>("PostId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("post_id");

                    b.Property<string>("ImageId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("image_id");

                    b.HasKey("PostId", "ImageId");

                    b.HasIndex(new[] { "ImageId" }, "IX_PostImage_image_id");

                    b.ToTable("PostImage", (string)null);
                });

            modelBuilder.Entity("TinTucGameAPI.Models.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("id");

                    b.Property<string>("Categoryid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("categoryid");

                    b.Property<string>("Description")
                        .HasColumnType("ntext")
                        .HasColumnName("description");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Categoryid" }, "IX_Category_categoryid");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("TinTucGameAPI.Models.Image", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("id");

                    b.Property<string>("Image1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("image");

                    b.HasKey("Id");

                    b.ToTable("Image", (string)null);
                });

            modelBuilder.Entity("TinTucGameAPI.Models.Post", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("id");

                    b.Property<string>("Author")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("author");

                    b.Property<string>("Content")
                        .HasColumnType("ntext")
                        .HasColumnName("content");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("date")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("ntext")
                        .HasColumnName("description");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("date")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Author" }, "IX_Post_author");

                    b.ToTable("Post", (string)null);
                });

            modelBuilder.Entity("TinTucGameAPI.Models.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("id");

                    b.Property<string>("Role1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("TinTucGameAPI.Models.staff", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("date")
                        .HasColumnName("birthdate");

                    b.Property<string>("Gender")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("gender");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("phone");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_Staff_user_id");

                    b.ToTable("Staff", (string)null);
                });

            modelBuilder.Entity("TinTucGameAPI.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("id");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("avatar");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Passwordhash")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("passwordhash");

                    b.Property<string>("Salt")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("salt");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("UserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_id");

                    b.Property<string>("RoleId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role_id");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex(new[] { "RoleId" }, "IX_UserRole_role_id");

                    b.ToTable("UserRole", (string)null);
                });

            modelBuilder.Entity("PostCategory", b =>
                {
                    b.HasOne("TinTucGameAPI.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_PostCategory_Category");

                    b.HasOne("TinTucGameAPI.Models.Post", null)
                        .WithMany()
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK_PostCategory_Post");
                });

            modelBuilder.Entity("PostImage", b =>
                {
                    b.HasOne("TinTucGameAPI.Models.Image", null)
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .IsRequired()
                        .HasConstraintName("FK_PostImage_Image");

                    b.HasOne("TinTucGameAPI.Models.Post", null)
                        .WithMany()
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK_PostImage_Post");
                });

            modelBuilder.Entity("TinTucGameAPI.Models.Category", b =>
                {
                    b.HasOne("TinTucGameAPI.Models.Category", "CategoryNavigation")
                        .WithMany("InverseCategoryNavigation")
                        .HasForeignKey("Categoryid")
                        .HasConstraintName("FK_Category_Category");

                    b.Navigation("CategoryNavigation");
                });

            modelBuilder.Entity("TinTucGameAPI.Models.Post", b =>
                {
                    b.HasOne("TinTucGameAPI.Models.User", "AuthorNavigation")
                        .WithMany("Posts")
                        .HasForeignKey("Author")
                        .HasConstraintName("FK_Post_User");

                    b.Navigation("AuthorNavigation");
                });

            modelBuilder.Entity("TinTucGameAPI.Models.staff", b =>
                {
                    b.HasOne("TinTucGameAPI.Models.User", "User")
                        .WithMany("staff")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Staff_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserRole", b =>
                {
                    b.HasOne("TinTucGameAPI.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_UserRole_Role");

                    b.HasOne("TinTucGameAPI.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_UserRole_User");
                });

            modelBuilder.Entity("TinTucGameAPI.Models.Category", b =>
                {
                    b.Navigation("InverseCategoryNavigation");
                });

            modelBuilder.Entity("TinTucGameAPI.Models.User", b =>
                {
                    b.Navigation("Posts");

                    b.Navigation("staff");
                });
#pragma warning restore 612, 618
        }
    }
}
